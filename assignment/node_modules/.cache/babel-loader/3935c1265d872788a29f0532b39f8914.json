{"ast":null,"code":"var _jsxFileName = \"/home/chaithra/Documents/github/Assignment/assignment/src/App.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [counter, setCounter] = useState(0);\n  const myRef = useRef(false);\n  useEffect(() => {\n    document.addEventListener('click', incrementCounter);\n    return () => document.removeEventListener('click', incrementCounter);\n  });\n\n  const incrementCounter = e => {\n    if (myRef.current.contains(e.target)) {\n      setCounter(counter + 1);\n    } else {\n      setCounter(counter - 1);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"innerDiv\",\n    onClick: incrementCounter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, counter);\n}\n\nexport default App;","map":{"version":3,"sources":["/home/chaithra/Documents/github/Assignment/assignment/src/App.js"],"names":["React","useState","useRef","useEffect","App","counter","setCounter","myRef","document","addEventListener","incrementCounter","removeEventListener","e","current","contains","target"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,MAAvB,EAA8BC,SAA9B,QAA8C,OAA9C;AACA,OAAO,WAAP;;AAGA,SAASC,GAAT,GACA;AAEA,QAAK,CAACC,OAAD,EAASC,UAAT,IAAqBL,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMM,KAAK,GAACL,MAAM,CAAC,KAAD,CAAlB;AAEAC,EAAAA,SAAS,CAAC,MACR;AACEK,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAkCC,gBAAlC;AACA,WAAO,MAAKF,QAAQ,CAACG,mBAAT,CAA6B,OAA7B,EAAqCD,gBAArC,CAAZ;AACD,GAJM,CAAT;;AAMA,QAAMA,gBAAgB,GAAEE,CAAD,IACvB;AACE,QAAGL,KAAK,CAACM,OAAN,CAAcC,QAAd,CAAuBF,CAAC,CAACG,MAAzB,CAAH,EACA;AACET,MAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,KAHD,MAKA;AACEC,MAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD;AAEF,GAXD;;AAaE,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,OAAO,EAAEK,gBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsDL,OAAtD,CADF;AAGD;;AAED,eAAeD,GAAf","sourcesContent":["import React,{useState,useRef,useEffect} from 'react';\nimport './App.css';\n\n\nfunction App()\n{\n\nconst[counter,setCounter]=useState(0);\nconst myRef=useRef(false);\n\nuseEffect(()=>\n  {\n    document.addEventListener('click',incrementCounter);\n    return ()=> document.removeEventListener('click',incrementCounter);\n  });\n\nconst incrementCounter=(e)=>\n{\n  if(myRef.current.contains(e.target))\n  {\n    setCounter(counter + 1);\n  }\n  else\n  {\n    setCounter(counter - 1)\n  }\n  \n}\n\n  return(\n    <div className=\"innerDiv\" onClick={incrementCounter}>{counter}</div>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}